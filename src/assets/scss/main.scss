/*
                                   __  _____  __    __   __
                                  | |  | |  / /`  ( (` ( (`
                                 |_|  |_|  \_\_, _)_) _)_)
                                        `-.` '.-'
                                     `-.    A   .-'.
                                  `-.    -./_\.-    .-'
                                      -.  /___\  .-
                                  `-.   `/__|__\'   .-'.
                               `-.    -./.-"^"-.\.-      '
                                  `-.  / <`(o)*> \  .-'
                               .-   .`/__`-...-'__\'   .-
                              ,...`-./_/____|____\_\.-'.,.
                                 ,-'    ,` . . ',   `-,
                             _,-' /____/____.____\____\ `-,_
                                     ,      |      .
                                    /     ,.+.,     \
 -<# ITCSS (Inverted Triangle CSS) -> (https://csswizardry.com/2018/11/itcss-and-skillshare/) #>-
__________________________________________________________________________________________________
 \---------------------------/------------                          Generic CSS (Low specificity)
  \                         /  1) Settings (Design)                              Y
   \-----------------------/---------------- (optional Skin or Theme)            |
    \                     /    2) Tools                                          |
     \-------------------/--------------------                                   |
      \                 /      3) Generic                                        |
       \---------------/------------------------                                 |
        \             /        4) Elements                                       |
         \-----------/----------------------------                               |
          \         /          5) Objects                                        |
           \-------/--------------------------------                             |
            \     /            6) Components                                     |
             \---/------------------------------------                           |
              \ /              7) Utilities (Trumps)                             V
               V                                                   Explicit CSS (High specificity)
1) Settings:             Global variables, config switches.
2) Tools:                Default mixins and functions.
3) Generic:              Ground-zero styles (Normalize.css, resets, box-sizing).
4) Elements:             Un-classed HTML elements (type selectors).
5) Objects:              Cosmetic-free design patterns
6) Components:           Designed components, chunks of UI.
7) Utilities/Trumps:     Helpers and overrides.

*/

// 1) Settings

:root {
  --size-mouse: 3.2rem; // small title
  --size-rat: 4.2rem;
  --size-cat: 6.2rem; // title
  --size-dog: 8.6rem;
  --size-wolf: 11rem;
  --size-pony: 13rem; // large title
  --size-horse: 20rem;

  --size-gutter: var(--size-rat);
  --size-design-bezel: var(--size-dog);
  --size-design-bezel--wide: var(--size-horse);
  --size-stack: var(--size-dog);

  --color-black: #000;
  --color-white: #fff;
  --color-grey: #f2f2f2;
  --color-grey--dark: #aaa;

  --color-text: var(--color-black);
  --color-text--inverted: var(--color-white);
  --color-text--accent: var(--color-grey--dark);

  --color-layout--background: var(--color-white);
  --color-layout--background-inverted: var(--color-black);
  --color-layout--accent: var(--color-grey);
  --color-layout--backdrop: rgba(0, 0,0, 0.9);

  @include bp('phone') {
    --size-mouse: calc(3.2rem / 1.4); // small title
    --size-rat: calc(4.2rem / 1.6);
    --size-cat: calc(6.2rem / 2); // title
    --size-dog: calc(8.6rem / 2);
    --size-wolf: calc(11rem / 2);
    --size-pony: calc(13rem / 2); // large title
    --size-horse: calc(20rem / 2);
  }
}

// 2) Tools

// 3) Generic
@font-face {
  font-family: MatterSQ;
  src: url("../fonts/MatterRaumgleiter-Regular.woff2") format("woff2"),
  url("../fonts/MatterRaumgleiter-Regular.woff") format("woff");
  font-weight: normal;
  font-style: normal;
  font-display: swap;
  unicode-range: U+000-5FF;
}

@font-face {
  font-family: MatterSQ;
  src: url("../fonts/MatterRaumgleiter-SemiBold.woff2") format("woff2"),
  url("../fonts/MatterRaumgleiter-SemiBold.woff") format("woff");
  font-weight: bold;
  font-style: normal;
  font-display: swap;
  unicode-range: U+000-5FF;
}

@font-face {
  font-family: MatterSQ;
  src: url("../fonts/MatterRaumgleiter-Heavy.woff2") format("woff2"),
  url("../fonts/MatterRaumgleiter-Heavy.woff") format("woff");
  font-weight: 900;
  font-style: normal;
  font-display: swap;
  unicode-range: U+000-5FF;
}

// 4) Elements

:root {
  font-size: screen-ratio-mix(
      .4, // 20% of the the font-size is relative to the screen width
      1440, // artboard width
      10, // target PX size (base font-size in the design)
    // 10px as a base so 1rem would be around 10px
  );
}

body {
  @include typo('default');
  background: var(--color-layout--background);
}

a {
  color: currentColor;
  text-decoration: none;

  &:hover {
    text-decoration: underline;
  }
}

// 5) Objects
.l-design-width {
  padding: var(--size-design-bezel);
}

.l-design-width--wide {
  padding: var(--size-design-bezel--wide);
}

// 6) Components

.c-design {
  --c-design-background: var(--color-layout--background);
  color: var(--color-text);
  background: var(--c-design-background);
}

.c-design--inverted {
  --c-design-background: var(--color-layout--background-inverted);
  color: var(--color-text--inverted);
}

// generic font classes

$textStyles: map-get($dialog-typo, $grid-default-breakpoint);

@each $textStyleName, $textStyle in $textStyles {
  .t-#{$textStyleName} {
    @include typo($textStyleName);

    margin-top: 1em;

    &:first-child {
      margin-top: 0;
    }
  }
}

.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}
